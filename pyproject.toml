[project]
name = "mAIgic-assistant"
version = "0.1.0"
description = "mAIgic Assistant - AI conversation system with voice, email, and calendar integration"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    # Only truly shared dependencies
    "python-dotenv>=1.1.1",  # Configuration management across all components
]

# System dependencies for PyAudio
[project.system-dependencies]
pyaudio = ["portaudio19-dev"]

[project.optional-dependencies]
# Speech processing capabilities
speech = [
    "pyaudio>=0.2.14",       # Audio input/output
    "aiohttp>=3.8.0",        # HTTP client for OpenAI API
    "websockets>=11.0.0",    # WebSocket client for real-time transcription
]

# Development and testing dependencies
dev = [
    "pytest",
    "pytest-cov",
    "pytest-asyncio",
    "ruff",
    "mypy",
    "build"
]

# OpenAI-specific dependencies (alias for speech for backward compatibility)
openai = [
    "mAIgic-assistant[speech]",
]

# Install everything for development
all = [
    "mAIgic-assistant[speech]",
    # Future: email, calendar, integrations will be added here
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

# Tell hatchling to include the new component structure
[tool.hatch.build.targets.wheel]
packages = [
    "src/mAIgic_speech", 
    "src/mAIgic_core", 
    "src/mAIgic_integrations"
]


[tool.pytest.ini_options]
testpaths = ["src/mAIgic_speech", "src/mAIgic_core", "src/mAIgic_integrations", "tests"]  # Test all components
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = [
    "--cov=src/mAIgic_speech",
    "--cov=src/mAIgic_core", 
    "--cov=src/mAIgic_integrations",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80"
]
asyncio_mode = "auto"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W"]
ignore = ["E501", "N999"]  # Line too long, Invalid module name (allow mAIgic branding)

[tool.mypy]
python_version = "3.12"
warn_return_any = true
strict = true
ignore_missing_imports = true
exclude = [
    "examples/",  # Exclude examples from strict type checking
    "tests/",     # Exclude test files from strict type checking
]
